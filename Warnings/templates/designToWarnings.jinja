#include <stdexcept>

#include <Warnings.hxx>

namespace Warnings
{

std::map<std::string, Warning> WarningsDefinitions = 
{
{% for ce in designInspector.objectify_config_entries('Warnings') %}
  {"{{ce.get('name')}}", {}}
{% endfor %}
};

void validateWarnings()
{
    for (auto& warningDefinition : Warnings::WarningsDefinitions)
    {
        if (warningDefinition.second.turnOn && warningDefinition.second.turnOff)
            throw std::runtime_error("Conflicting command line arguments for warning [" + warningDefinition.first + "]");
    }
}

void passToConfiguration(Configuration::Warnings& warningsConfig)
{
{% for ce in designInspector.objectify_config_entries('Warnings') %}
  if (WarningsDefinitions["{{ce.get('name')}}"].turnOn)
    warningsConfig.{{ce.get('name')}}() = true;
  if (WarningsDefinitions["{{ce.get('name')}}"].turnOff)
    warningsConfig.{{ce.get('name')}}() = false;
{% endfor %}    
}

}